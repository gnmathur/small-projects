// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gossip.proto
// Protobuf Java Version: 4.29.3

package dev.gmathur.gossip.proto;

public interface GossipMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:gossip.GossipMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique ID to detect duplicates
   * </pre>
   *
   * <code>string message_id = 1;</code>
   * @return The messageId.
   */
  java.lang.String getMessageId();
  /**
   * <pre>
   * Unique ID to detect duplicates
   * </pre>
   *
   * <code>string message_id = 1;</code>
   * @return The bytes for messageId.
   */
  com.google.protobuf.ByteString
      getMessageIdBytes();

  /**
   * <pre>
   * Original sender
   * </pre>
   *
   * <code>string source_node_id = 2;</code>
   * @return The sourceNodeId.
   */
  java.lang.String getSourceNodeId();
  /**
   * <pre>
   * Original sender
   * </pre>
   *
   * <code>string source_node_id = 2;</code>
   * @return The bytes for sourceNodeId.
   */
  com.google.protobuf.ByteString
      getSourceNodeIdBytes();

  /**
   * <pre>
   * User information being gossiped
   * </pre>
   *
   * <code>repeated .gossip.User users = 3;</code>
   */
  java.util.List<dev.gmathur.gossip.proto.User> 
      getUsersList();
  /**
   * <pre>
   * User information being gossiped
   * </pre>
   *
   * <code>repeated .gossip.User users = 3;</code>
   */
  dev.gmathur.gossip.proto.User getUsers(int index);
  /**
   * <pre>
   * User information being gossiped
   * </pre>
   *
   * <code>repeated .gossip.User users = 3;</code>
   */
  int getUsersCount();
  /**
   * <pre>
   * User information being gossiped
   * </pre>
   *
   * <code>repeated .gossip.User users = 3;</code>
   */
  java.util.List<? extends dev.gmathur.gossip.proto.UserOrBuilder> 
      getUsersOrBuilderList();
  /**
   * <pre>
   * User information being gossiped
   * </pre>
   *
   * <code>repeated .gossip.User users = 3;</code>
   */
  dev.gmathur.gossip.proto.UserOrBuilder getUsersOrBuilder(
      int index);

  /**
   * <pre>
   * Limits propagation
   * </pre>
   *
   * <code>int32 hop_count = 4;</code>
   * @return The hopCount.
   */
  int getHopCount();
}
