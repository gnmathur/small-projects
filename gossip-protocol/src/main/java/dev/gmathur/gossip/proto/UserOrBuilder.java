// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gossip.proto
// Protobuf Java Version: 4.29.3

package dev.gmathur.gossip.proto;

public interface UserOrBuilder extends
    // @@protoc_insertion_point(interface_extends:gossip.User)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>string email = 3;</code>
   * @return The email.
   */
  java.lang.String getEmail();
  /**
   * <code>string email = 3;</code>
   * @return The bytes for email.
   */
  com.google.protobuf.ByteString
      getEmailBytes();

  /**
   * <pre>
   * Node ID -&gt; Version number
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; version_vector = 4;</code>
   */
  int getVersionVectorCount();
  /**
   * <pre>
   * Node ID -&gt; Version number
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; version_vector = 4;</code>
   */
  boolean containsVersionVector(
      java.lang.String key);
  /**
   * Use {@link #getVersionVectorMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Long>
  getVersionVector();
  /**
   * <pre>
   * Node ID -&gt; Version number
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; version_vector = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.Long>
  getVersionVectorMap();
  /**
   * <pre>
   * Node ID -&gt; Version number
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; version_vector = 4;</code>
   */
  long getVersionVectorOrDefault(
      java.lang.String key,
      long defaultValue);
  /**
   * <pre>
   * Node ID -&gt; Version number
   * </pre>
   *
   * <code>map&lt;string, uint64&gt; version_vector = 4;</code>
   */
  long getVersionVectorOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Creation timestamp
   * </pre>
   *
   * <code>int64 timestamp = 5;</code>
   * @return The timestamp.
   */
  long getTimestamp();
}
